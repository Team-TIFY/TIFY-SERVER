plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.7'
	id 'com.diffplug.spotless' version '6.11.0'
//	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "3.5.0.2730"
}

bootJar.enabled = false

repositories {
	mavenCentral()
}

apply plugin: 'org.sonarqube'

subprojects {
	group = 'tify.server'
	version = '0.0.1-SNAPSHOT'
	sourceCompatibility = '17'

	apply plugin: 'java'
	apply plugin: 'java-library'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'jacoco'

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.proj ectlombok:lombok'
	}

	configurations {
		complieOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	test {
		useJUnitPlatform()
		finalizedBy jacocoTestReport
	}
}

// sonarqube 설정
sonarqube {
	properties {
		property 'sonar.projectKey', 'example'
		property 'sonar.organization', 'example'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.sources', 'src'
		property 'sonar.language', 'java'
		property 'sonar.sourceEncoding', 'UTF-8'
		property 'sonar.test.inclusions', '**/*Test.java'
		property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/** ,**/*Application*.java , **/*Config*.java,' +
				'**/*Dto*.java, **/*Request*.java, **/*Response*.java ,**/*Exception*.java ,**/*ErrorCode*.java'
		property 'sonar.java.coveragePlugin', 'jacoco'
	}
}

// spotless 설정
spotless {
	java {
		target("**/*.java")
		googleJavaFormat().aosp()
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}